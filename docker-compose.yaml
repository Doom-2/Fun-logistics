version: '3.8'

services:

  db:
    image: postgres:15.0-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 5s
      timeout: 5s
      retries: 5

#    ports:
#      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data


  redis:
    image: "redis:alpine"


  api:
#    build:
#      context: .
    image: doom2/g-sheet-to-db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: python3 -c 'import http.client;http.client.HTTPConnection("api:8000", timeout=1).request("GET", "/ping/")' || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
    links:
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./static:/project/static


  celery:
    build: .
    entrypoint: ''
    command: celery -A google_sheets_to_db worker -l info
    volumes:
      - .:/project
    depends_on:
      - db
      - redis
    links:
      - redis


  celery-beat:
      build: .
      entrypoint: ''
      command: celery -A google_sheets_to_db beat -l info
      volumes:
        - .:/project
      depends_on:
        - db
        - redis
      links:
        - redis


  collect_static:
    build: .
    env_file:
      - ./.env
    entrypoint: ''
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./static:/project/static
    command: python3 manage.py collectstatic -c --no-input

volumes:
  pg_data:
  static:
